name: Build and Publish

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.11"]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            pyproject.toml
      - 
        name: Get version
        id: version
        run: |
          pip install --upgrade pip setuptools
          pip install setuptools_scm
          echo "Setting version to $(python -m setuptools_scm --strip-dev)"
          echo "::set-output name=version::$(python -m setuptools_scm --strip-dev)"
          echo "Setting full version to $(python -m setuptools_scm)"
          echo "::set-output name=versionfull::$(python -m setuptools_scm)"
      - 
        name: Build Wheels
        run: |
          pip wheel . -w dist --no-deps
      - 
        name: Upload Files to Release
        uses: svenstaro/upload-release-action@v2
        with:
          file: dist/spydertop-${{ steps.version.outputs.versionfull }}-py3-none-any.whl
          asset_name: spydertop-${{ steps.version.outputs.versionfull }}-py${{ matrix.python-version }}-none-any.whl
      # the remaining steps are publishing to external services,
      # and should only happen once
      # these could be a separate job, but they require the version step
      - 
        name: Publish to PyPI
        if: matrix.python-version == '3.11'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
      -
        name: Set up Docker Buildx
        if: matrix.python-version == '3.11'
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        if: matrix.python-version == '3.11'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        if: matrix.python-version == '3.11'
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: spyderbat/spydertop:latest,spyderbat/spydertop:${{ steps.version.outputs.version }}
  build_pyinstaller:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: spydertop
            asset_name: spydertop-bundled-linux-amd64
          - os: windows-latest
            artifact_name: spydertop.exe
            asset_name: spydertop-bundled-windows-amd64
          - os: macos-latest
            artifact_name: spydertop
            asset_name: spydertop-bundled-macos-amd64

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        cache: pip
        cache-dependency-path: |
          pyproject.toml

    - name: Install dependencies
      run: pip install pyinstaller -e .
    - name: Build with PyInstaller
      run: pyinstaller spydertop.spec
    - name: Upload Files to Release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}
